# run this script using "sudo docker-compose up -d"
# ! On the first run you need to enter the terminal using "sudo docker attach based-bot"
# ! once you are done with the setup you can leave the terminal using "CTR+P | CTR + Q"

version: "3"
services:
  based-AIO-image:
    container_name: based-bot
    image: python:3.12
    working_dir: /code
    ports:
      - "8000:8000"
    environment:
#       The proxy can be commented out, its only necessary if your running this bot in a datacenter.
#       It can also be commented out if you don't need the /webapp or YouTube Download command
      - HTTP_PROXY=http://<Address:port>
      - HTTPS_PROXY=http://<Address:port>
      - NO_PROXY=localhost,127.0.0.1
      - API_KEY=None
      - API_KEY_SECRET=None
      - ACCESS_TOKEN=None
      - ACCESS_TOKEN_SECRET=None
      - BEARER_TOKEN=None
      - TWITTER_USERNAME=None
      - MEMBER_ROLE_ID=None
      - GUEST_ROLE_ID= None
      - AUDIT_LOG_CHANNEL_ID=
      - MOD_LOG_CHANNEL_ID=

    restart: unless-stopped

    deploy:
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 1G

    volumes:
      - .:/code
      - ./cdn:/cdn

    command: ["python", "-m", "main", "--host", "0.0.0.0", "--reload"]

#   Yes... live with it... i didn't want to make a build file...
    entrypoint: >
      sh -c "apt-get update && apt-get install -y ffmpeg && pip install --no-cache-dir -r /code/requirements.txt && exec \"$$0\" \"$$@\""

#   As with the Proxy this whole build section can be commented out if it's not running in a datacenter
#   or if you don't plan on using the YouTube functionality.

    build:
      context: .
      args:
        HTTP_PROXY: http://<Address:port>
        HTTPS_PROXY: http://<Address:port>
        NO_PROXY: localhost,127.0.0.1

    stdin_open: true  # can be removed after the Initial Setup (see line 2)
    tty: true # can be removed after the Initial Setup (see line 2)

  based-cdn:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./cdn:/usr/share/nginx/html:ro  # Mount the data volume
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro  # Custom Nginx config
